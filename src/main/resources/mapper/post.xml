<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jida.mapper.PostMapper">

	<resultMap type="post" id="post">
		<result column="post_id" property="postId"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="created_at" property="createdAt"/>
		<result column="hit" property="hit"/>
		<result column="board_id" property="boardId"/>
		<result column="member_id" property="memberId"/>

		<association property="member" javaType="member">
			<result column="email" property="email"/>
			<result column="nickname" property="nickname"/>
		</association>

		<association property="board" javaType="board">
			<result column="board_name" property="boardName"/>
		</association>
	</resultMap>

	<insert id="writePost" parameterType="post" useGeneratedKeys="true" keyProperty="postId">
		insert into post (title, content, hit, board_id, member_id)
		values (#{title}, #{content}, #{hit}, #{boardId}, #{memberId})
	</insert>
	
	<select id="findById" parameterType="long" resultMap="post">
		select post_id, title, content, created_at, hit, board_id, member_id
		from post
		where post_id = #{postId}
	</select>

	<update id="updateHit" parameterType="long">
		update post
		set hit = hit + 1
		where post_id = #{postId}
	</update>


	<update id="updatePost" parameterType="post">
		update post
		set title = #{title}, content = #{content}, board_id = #{boardId}
		where post_id = #{postId}
	</update>

	<delete id="deletePost" parameterType="long">
		delete from post
		where post_id = #{postId}
	</delete>

	<select id="findPosts" parameterType="Long" resultMap="post">
		select p.post_id, p.title, p.content, p.created_at, p.hit, p.board_id, p.member_id,
		m.email, m.nickname, b.board_name
		from post p
		inner join member m on p.member_id = m.member_id
		inner join board b on p.board_id = b.board_id
		<where>
			<include refid="list"></include>
		</where>
		<if test="order == 'latest'">
			order by p.created_at desc
		</if>
		<if test="order == 'popularity'">
			order by p.hit desc
		</if>
		limit #{limit} offset #{offset}
	</select>
	
	<sql id="list">
		<if test="boardId != 0">
			and p.board_id = #{boardId}
		</if>
	</sql>
</mapper>